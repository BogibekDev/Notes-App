// Generated by Dagger (https://dagger.dev).
package dev.bogibek.eslatmalar.feature_notes.presentation.notes.viewmodel;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dev.bogibek.eslatmalar.feature_notes.domain.use_case.NoteUseCases;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NotesViewModel_Factory implements Factory<NotesViewModel> {
  private final Provider<NoteUseCases> noteUseCasesProvider;

  public NotesViewModel_Factory(Provider<NoteUseCases> noteUseCasesProvider) {
    this.noteUseCasesProvider = noteUseCasesProvider;
  }

  @Override
  public NotesViewModel get() {
    return newInstance(noteUseCasesProvider.get());
  }

  public static NotesViewModel_Factory create(Provider<NoteUseCases> noteUseCasesProvider) {
    return new NotesViewModel_Factory(noteUseCasesProvider);
  }

  public static NotesViewModel newInstance(NoteUseCases noteUseCases) {
    return new NotesViewModel(noteUseCases);
  }
}
